/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

/* @import "@ionic/angular/css/palettes/dark.always.css"; */
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
@import '@ionic/angular/css/palettes/dark.system.css';

.form {
    gap: 5vh
}

.flexContainer {
    flex: 1;
    align-content: center;
}

.flex {
    display: flex;
    align-items: center;
    align-content: center;
    justify-content: center;
    flex-direction: row;
    gap: 1vh;

    &.flex-column {
        flex-direction: column;
    }

    &.flex-row {
        flex-direction: row;
    }

    &.right {
        justify-content: right;
    }
}

capacitor-google-map {
    display: inline-block;
    width: 275px;
    height: 400px;
}

.ion-button {
    min-height: 3rem;
    min-width: 90%;
}

.p-button {
    justify-content: center;
}

.button-native {
    --border-radius: 20px;
    border-radius: 20px;
}

@for $i from 1 through 10 {
    .gap-#{$i} {
        gap: #{$i}vh
    }
}

svg {
  -webkit-animation-name: spin;
  -webkit-animation-duration: 1000ms;
  -webkit-animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;

  -moz-animation-name: spin;
  -moz-animation-duration: 1000ms;
  -moz-animation-iteration-count: infinite;
  -moz-animation-timing-function: linear;

  -ms-animation-name: spin;
  -ms-animation-duration: 1000ms;
  -ms-animation-iteration-count: infinite;
  -ms-animation-timing-function: linear;

  animation-name: spin;
  animation-duration: 1000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;



  @-ms-keyframes spin {
    from {
      -ms-transform: rotate(0deg);
    } to {
        -ms-transform: rotate(360deg);
      }
  }
  @-moz-keyframes spin {
    from {
      -moz-transform: rotate(0deg);
    } to {
        -moz-transform: rotate(360deg);
      }
  }
  @-webkit-keyframes spin {
    from {
      -webkit-transform: rotate(0deg);
    } to {
        -webkit-transform: rotate(360deg);
      }
  }
  @keyframes spin {
    from {
      transform: rotate(0deg);
    } to {
        transform: rotate(360deg);
      }
  }
}
